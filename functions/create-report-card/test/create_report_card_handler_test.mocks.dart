// Mocks generated by Mockito 5.4.5 from annotations
// in create_report_card/test/create_report_card_handler_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:create_report_card/report_card_generator.dart' as _i4;
import 'package:dart_appwrite/dart_appwrite.dart' as _i2;
import 'package:dart_appwrite/src/enums.dart' as _i9;
import 'package:dart_appwrite/src/response.dart' as _i3;
import 'package:dart_appwrite/src/upload_progress.dart' as _i8;
import 'package:gradebee_models/common.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

import 'create_report_card_handler_test.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_1<T> extends _i1.SmartFake implements _i3.Response<T> {
  _FakeResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ReportCardGenerator].
///
/// See the documentation for Mockito's code generation for more information.
class MockReportCardGenerator extends _i1.Mock
    implements _i4.ReportCardGenerator {
  @override
  _i5.Future<List<_i6.ReportCardSection>> generateReportCard(
    _i6.ReportCard? reportCard,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#generateReportCard, [reportCard]),
            returnValue: _i5.Future<List<_i6.ReportCardSection>>.value(
              <_i6.ReportCardSection>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<_i6.ReportCardSection>>.value(
                  <_i6.ReportCardSection>[],
                ),
          )
          as _i5.Future<List<_i6.ReportCardSection>>);

  @override
  dynamic createUserPrompt(List<String>? studentNotes) => super.noSuchMethod(
    Invocation.method(#createUserPrompt, [studentNotes]),
    returnValueForMissingStub: null,
  );

  @override
  dynamic createSystemPrompt(_i6.ReportCardTemplate? template) =>
      super.noSuchMethod(
        Invocation.method(#createSystemPrompt, [template]),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  @override
  Map<String, String> get config =>
      (super.noSuchMethod(
            Invocation.getter(#config),
            returnValue: <String, String>{},
            returnValueForMissingStub: <String, String>{},
          )
          as Map<String, String>);

  @override
  set config(Map<String, String>? _config) => super.noSuchMethod(
    Invocation.setter(#config, _config),
    returnValueForMissingStub: null,
  );

  @override
  String get endPoint =>
      (super.noSuchMethod(
            Invocation.getter(#endPoint),
            returnValue: _i7.dummyValue<String>(
              this,
              Invocation.getter(#endPoint),
            ),
            returnValueForMissingStub: _i7.dummyValue<String>(
              this,
              Invocation.getter(#endPoint),
            ),
          )
          as String);

  @override
  _i5.Future<String?> webAuth(Uri? url) =>
      (super.noSuchMethod(
            Invocation.method(#webAuth, [url]),
            returnValue: _i5.Future<String?>.value(),
            returnValueForMissingStub: _i5.Future<String?>.value(),
          )
          as _i5.Future<String?>);

  @override
  _i2.Client setSelfSigned({bool? status = true}) =>
      (super.noSuchMethod(
            Invocation.method(#setSelfSigned, [], {#status: status}),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#setSelfSigned, [], {#status: status}),
            ),
            returnValueForMissingStub: _FakeClient_0(
              this,
              Invocation.method(#setSelfSigned, [], {#status: status}),
            ),
          )
          as _i2.Client);

  @override
  _i2.Client setEndpoint(String? endPoint) =>
      (super.noSuchMethod(
            Invocation.method(#setEndpoint, [endPoint]),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#setEndpoint, [endPoint]),
            ),
            returnValueForMissingStub: _FakeClient_0(
              this,
              Invocation.method(#setEndpoint, [endPoint]),
            ),
          )
          as _i2.Client);

  @override
  _i2.Client setProject(dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#setProject, [value]),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#setProject, [value]),
            ),
            returnValueForMissingStub: _FakeClient_0(
              this,
              Invocation.method(#setProject, [value]),
            ),
          )
          as _i2.Client);

  @override
  _i2.Client setKey(dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#setKey, [value]),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#setKey, [value]),
            ),
            returnValueForMissingStub: _FakeClient_0(
              this,
              Invocation.method(#setKey, [value]),
            ),
          )
          as _i2.Client);

  @override
  _i2.Client setJWT(dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#setJWT, [value]),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#setJWT, [value]),
            ),
            returnValueForMissingStub: _FakeClient_0(
              this,
              Invocation.method(#setJWT, [value]),
            ),
          )
          as _i2.Client);

  @override
  _i2.Client setLocale(dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#setLocale, [value]),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#setLocale, [value]),
            ),
            returnValueForMissingStub: _FakeClient_0(
              this,
              Invocation.method(#setLocale, [value]),
            ),
          )
          as _i2.Client);

  @override
  _i2.Client setSession(dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#setSession, [value]),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#setSession, [value]),
            ),
            returnValueForMissingStub: _FakeClient_0(
              this,
              Invocation.method(#setSession, [value]),
            ),
          )
          as _i2.Client);

  @override
  _i2.Client setForwardedUserAgent(dynamic value) =>
      (super.noSuchMethod(
            Invocation.method(#setForwardedUserAgent, [value]),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#setForwardedUserAgent, [value]),
            ),
            returnValueForMissingStub: _FakeClient_0(
              this,
              Invocation.method(#setForwardedUserAgent, [value]),
            ),
          )
          as _i2.Client);

  @override
  _i2.Client addHeader(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#addHeader, [key, value]),
            returnValue: _FakeClient_0(
              this,
              Invocation.method(#addHeader, [key, value]),
            ),
            returnValueForMissingStub: _FakeClient_0(
              this,
              Invocation.method(#addHeader, [key, value]),
            ),
          )
          as _i2.Client);

  @override
  _i5.Future<_i3.Response<dynamic>> chunkedUpload({
    required String? path,
    required Map<String, dynamic>? params,
    required String? paramName,
    required String? idParamName,
    required Map<String, String>? headers,
    dynamic Function(_i8.UploadProgress)? onProgress,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#chunkedUpload, [], {
              #path: path,
              #params: params,
              #paramName: paramName,
              #idParamName: idParamName,
              #headers: headers,
              #onProgress: onProgress,
            }),
            returnValue: _i5.Future<_i3.Response<dynamic>>.value(
              _FakeResponse_1<dynamic>(
                this,
                Invocation.method(#chunkedUpload, [], {
                  #path: path,
                  #params: params,
                  #paramName: paramName,
                  #idParamName: idParamName,
                  #headers: headers,
                  #onProgress: onProgress,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.Response<dynamic>>.value(
              _FakeResponse_1<dynamic>(
                this,
                Invocation.method(#chunkedUpload, [], {
                  #path: path,
                  #params: params,
                  #paramName: paramName,
                  #idParamName: idParamName,
                  #headers: headers,
                  #onProgress: onProgress,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.Response<dynamic>>);

  @override
  _i5.Future<_i3.Response<dynamic>> call(
    _i9.HttpMethod? method, {
    String? path = '',
    Map<String, String>? headers = const {},
    Map<String, dynamic>? params = const {},
    _i9.ResponseType? responseType,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #call,
              [method],
              {
                #path: path,
                #headers: headers,
                #params: params,
                #responseType: responseType,
              },
            ),
            returnValue: _i5.Future<_i3.Response<dynamic>>.value(
              _FakeResponse_1<dynamic>(
                this,
                Invocation.method(
                  #call,
                  [method],
                  {
                    #path: path,
                    #headers: headers,
                    #params: params,
                    #responseType: responseType,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.Response<dynamic>>.value(
              _FakeResponse_1<dynamic>(
                this,
                Invocation.method(
                  #call,
                  [method],
                  {
                    #path: path,
                    #headers: headers,
                    #params: params,
                    #responseType: responseType,
                  },
                ),
              ),
            ),
          )
          as _i5.Future<_i3.Response<dynamic>>);
}

/// A class which mocks [Context].
///
/// See the documentation for Mockito's code generation for more information.
class MockContext extends _i1.Mock implements _i10.Context {
  @override
  void error(String? message) => super.noSuchMethod(
    Invocation.method(#error, [message]),
    returnValueForMissingStub: null,
  );
}
